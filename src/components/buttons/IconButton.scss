@use '../../scss/abstracts/variables.scss' as var;
@use '../../scss/abstracts/mixins.scss' as mix;
@use 'sass:map';
.IconButton {
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    @include mix.hover {
        cursor: pointer;
    }
    &:focus {
        @include mix.shadow($md: true);
    }
    &:disabled {
        cursor: not-allowed;
    }
    &-icon {
        width: 2rem;
        height: 2rem;
    }
    &--darkGray {
        color: map.get($map: var.$colors, $key: color-dark-gray);
        &:disabled {
            color: map.get($map: var.$colors, $key: color-light-gray);
        }
    }
    &--darkGrayFilled {
        background-color: map.get($map: var.$colors, $key: color-dark-gray);
        color: map.get($map: var.$colors, $key: color-white);
        &:disabled {
            background-color: map.get(
                $map: var.$colors,
                $key: color-light-gray
            );
        }
    }
    &--purple {
        color: map.get($map: var.$colors, $key: color-purple);
        &:disabled {
            color: map.get($map: var.$colors, $key: color-light-gray);
        }
    }
    &--purpleFilled {
        background-color: map.get($map: var.$colors, $key: color-purple);
        color: map.get($map: var.$colors, $key: color-white);
        &:disabled {
            background-color: map.get(
                $map: var.$colors,
                $key: color-light-gray
            );
        }
    }
    &--red {
        color: map.get($map: var.$colors, $key: color-red);
        &:disabled {
            color: map.get($map: var.$colors, $key: color-light-gray);
        }
    }
    &--redFilled {
        background-color: map.get($map: var.$colors, $key: color-red);
        color: map.get($map: var.$colors, $key: color-white);
        &:disabled {
            background-color: map.get(
                $map: var.$colors,
                $key: color-light-gray
            );
        }
    }
}
